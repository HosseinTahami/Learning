Redis is a Key, Value and NoSql DataBase.

Redis is a memory database means
 saving important information in RAM.

Redis is mostly used for cache and message broker.

Key Name | Type of Value | Value
|
|==> first name | string | Hossein
|==> Type of Value is not necessary
Command:

systemctl status redis.service
systemctl start redis.service
systemctl stop redis.service

=====================  redis-cli  =====================

ping --> should return PONG 
127.0.0.1:6379> 
|
|==> 127.0.0.1 is local host & 6379 is port number

redis-cli -h (server ip) -p (port number) -a (password)

=====================   Key   =========================

SET (Key) (Value)
|
|==> SET num1 123
|
|==> SET num2 456

GET (Key)
|
|==> GET num1 --> "123"
|
|==> GET num4 --> (nil)

DEL (Key)
|
|==> DEL num1 num2 --> (integer) 3

EXISTS (key)
|
|==> EXISTS num1 num1 num1 --> (integer) 3
|
|==> EXISTS num2 num3 num8 --> (integer) 2

EXPIRE (key) (seconds)
|
|==> EXPIRE num1 40

PEXPIRE (Key) (MilliSeconds)
|
|==> EXPIRE num2 7000

TTL (key): Time To Live
|
|==> TTL num1 --> (integer) 10

KEYS (regex pattern)
|
|==> KEYS num* --> 1) "num1" 
                   2) "num2"
                   3) "num3"

PERSIST (key that have expire time): no expire time any more
|
|==> PERSIST num1

RENAME (old key name) (new key name)
|
|==> RENAME num1 number1

APPEND (key) (value you want to append)
|
|==> SET name Hossein
|==> APPEND name " Tahami"
|==> GET name "Hossein Tahami"

DECR (key): Decrement
|
|==> SET num 10
|==> DECR num --> 9
|==> DECR num -- 8

DECRBY (key) (value you want to Decrement)
|
|==> SET num 10
|==> DECRBY num 3 --> 7

GETRANGE (key) (start) (end)
|
|==> SET name "Hossein Tahami"
|==> GETRANGE name 0 6 --> Hossein

GETSET (key) (new value): set new value & return the old one
|
|==> SET name Hossein
|==> GETSET name "Hossein Tahami" --> Hossein

INCR (key): Increment opposite of DECR
INCRBY (key) (value you want to add): opposite of DECRBY
INCRBYFLOAT (key) (float number)

MSET (key) (value) (key) (value) ...
|
|==> MSET name Hossein age 20 country Iran

MGET (multiple key)
|
|==> MGET name age country --> Hossein 20 Iran

MSETNX (key) (value) (key) (value) ...
|
|==> SET value for those keys if they do Not Exist

SETRANGE (key) (starting index) (value)
|
|==> SET name amir
|==> SETRANGE name 1 bcd
|==> GET name --> abcd

STRLEN (key)
|
|==> SET name Hossein
|==> STRLEN name --> 7

=======================   List   ==========================

LPUSH & RPUSH (key) (value) (value) ...
|
|==> LPUSH names peter tom jack
|==> RPUSH names tony john

LRANGE (key) (start) (end)
|
|==> LRANGE names 0 -1 --> all of the list
|
|==> LRANGE names 1 3 --> second and third

LPUSHX (key) (value) (value) ...
|
|==> push the values if the key EXIST

LINDEX (key) (index)
|
|==> LINDEX names 2

LPOS (key) (value)
|
|==> LPOS names jack --> (index)


LINSERT (key) (Before or After) (value inside list) (value you want to add)
|
|==> LINSERT names AFTER john james --> add james after john

LLEN (key) --> Length of list

LPOP & RPOP (key) : Left & Right POP
|
|==> LPOP names

LREM (key) (+ or -)(number) (value)
|
|==> remove from start or end of a list
     number of the values you want.

LSET (key) (index) (value)
|
|==> overwrite the index you want with the value you gave

RPOPLPUSH (source list) (destination list)
|
|==> Transfer last index of source to first index of destination

BLPOP (keys) (timeout)

=====================  NoSQL vs SQL  =====================  