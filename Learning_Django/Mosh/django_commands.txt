Django ORM:
Object Relational Mapper
|
|__ <Class Name>.objects.all() / .filter() / .order_by() / .count() / .get() / .first() / ...
        |
        |__This is a query set object not a list

<Class Name>.objects.get(pk=1 or id=1)
            |
            |__This is an object not a query set

<Class Name>.objects.filter(pk=1).first() / .exist()
                                                |__ we get boolean

-------------------------------------------------------------------------------

from django.core.exceptions import ObjectDoesNotExist
|
|__ use try and except ObjectDoesNotExist

------------------------------- QuerySet Api -----------------------------------

Field lookups:
exact, iexact, contains, in, gt, lt, lte, startwith, istartwith, ...

Example: Product.objects.filter(price__gt=20) --> price greater than 20
         Product.objects.filter(price__range=(20, 30))
         Product.objects.filter(collection__id=1) --> we will get the products with collection with id number 1
         |__ so id is an attribute of collection and collection is an attribute of Product !
         Product.objects.filter(last_update__year=2010 )
         |__ last_update is an attribute of Product that is Date & Time Type
             so you can use anything like __year, __month , __hour, ... with it !
         Product.objects.filter(description__isnull=True)
         |__ __isnull checks for an attribute to be empty or not !

-------------------------------  More Complex Query  ---------------------------------------

from django.db.models import Q
queryset = Product.objects.filter(Q(price__lt=12) | Q(inventory__gt=20))
                |___ <|> or / <&> and / <~> not / ...