Shell: is a interface between User and Kernel 
       bash & zsh are most popular Shell

==================    File Structure    ===================

/dev: information about devices
/etc: configs
/home: users information
/mnt : information of mount devices like hard and ...
/tmp : temporary files
/root : exactly like home directory but for root user


====================    Shortcuts    ====================

CTRL + ALT + T ==> Open Terminal
exit / CTRL + D ==> Close Terminal

====================    Commands    =====================

pwd : Print Working Directory

clear : Clean Terminal

ls : List of every thing in directory

ls -a: -a is for hidden files and directories

ls -l: -l is for longer information about files and directories

mkdir : Make Directory

cd : Change Directory ==> cd .. : backward move

uname -a : information about OS | -a stands for (all)

man : Manual ==> man (command you want)

type: Tells if a command is Third Party or Built-In

touch: Create a File

rm: Delete a File ==> rm (File Name)

rm -r: Delete a Directory ==> rm -r (Directory Name)

cat: concatenate files
|
|==> cat -n (file name): shows inside the file and put a number next to each line

nl: Works like cat -n but blank lines wont have number

history: Shows history of your commands (last 500)
|
|==> !(number of the command you want to work again) ==> exm: !67
|
|==> !! last command work again

echo: Works like print or insert sth in a file
|
|==> echo (text you want) >> (file name)


whoami: say which user you are

sudo su: Substitute User ==> su (Username)

head: Shows the first 10 line of a file
|
|==> head -n (number) (file name)

tail: Shows the last 10 line of a file
|
|==> tail -n (number) (file name)

less: Show a file Page by Page and Navigate Up and Down
|
|==> less (file name)

printenv: Print Environment Variable

export: create a Environment Variable
|
|==> export (VARIABLE NAME)="What Ever You Want"

unset: Delete a Environment Variable
|
|==> unset (VARIABLE NAME)

grep: search for something in a file
|
|==> grep (sth) (file name)
|
|==> grep -w (sth) (filename) : -w is for the exact word not part of a word
|
|== > grep -c (sth) (filename) : -c will count and give a number
|
|==> grep -i (sth) (filename) : -i will not consider the uppercase and lowercase

add-apt-repository "Repository Link"
|
|==> will add repository in etc/apt/source.list
     so when you want to install a package it 
     will search those repositories.

dpkg: Under the Hood of apt-get
|
|==> dpkg -i "app-name.deb" : -i will install the package
|
|==> dpkg -r "app-name.deb" : -r will remove the package
|
|==> dpkg -s "app-name.deb" : -s will show status of the package

dpkg-reconfigure (package_name) : will reset the package to its default setting

ps : Process
|
|==> ps -ef : Shows all of the processes with detail

top : Like ps Command but Live

uptime: Shows detail about running time of devices

free : Shows free space of Memory and swap and ...
|
|==> free -h: shows memory by Gb

sleep: terminal will go to sleep
|
|==> sleep (number) & : & will make the command run in background
|
|==> if you forgot the & sign you can use CTRL+Z

jobs: shows what happening in the background

fg: ForeGround
|
|==> move a command from background to foreground
|
|==> fg %(id of the command)

bg: BackGround
|
|==> exactly like fg but for moving to background

kill (id of command): find the if of command you want with jobs command
|
|==> killall (a command for example sleep): kill all of the sleep commands
|
|==> kill %(id) %(id) ...



============== Environment Variable =============
PATH: Directories that search for a command you use to call it
|
|==> with the command : which (Command name) ==> which ls

the output of (( which ls )) wil be where this command where called from !


add Environment Variable inside .bashrc or .zshrc
with export command if you want to create a new 
Environment Variable but if you want to change an
old one you can just call it like the this example
|
|==> PATH=$PATH:(Something New)

In the example we add (Something New) to our old PATH
Environment Variable !

================ Redirect & Pipe Line ================

(Command) >> (filename)
|
|==> ls -la >> (filename)

(sth that will cause error) 2>> (filename)

tr "sth in file" "sth new" < (filename)

cmd1 | cmd2 | cmd3 ==> result of 1 go to 2 result of 2 go to 3

